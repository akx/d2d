{"version":3,"sources":["components/ErrorDisplay.tsx","core.tsx","components/ErrorWrapper.tsx","components/TableView.tsx","components/XlsxView.tsx","converters.tsx","types.tsx","components/ConverterSelect.tsx","components/Toolbar.tsx","samples.tsx","components/Editor.tsx","components/SourceBox.tsx","consts.tsx","sources.tsx","components/TransformBox.tsx","components/DestBox.tsx","components/MainContentPane.tsx","App.tsx","index.tsx"],"names":["ErrorDisplay","result","error","phase","className","name","stack","toString","innerTransform","inputs","transform","data","data1","data2","trim","length","_","lodash","R","ramda","eval","doTransform","sources","destType","index","source","push","sourceConverters","type","destinationConverters","defaultRenderError","errorInfo","reset","href","onClick","ErrorWrapper","state","resetError","setState","undefined","this","props","renderError","render","React","Component","LoadableTable","Loadable","loader","loading","CellRenderer","value","JSON","stringify","TableView","memo","dataArray","Array","from","columnOrder","columnSet","Set","forEach","datum","Object","keys","column","has","add","getColumns","columns","map","col","accessor","Header","Cell","Error","extension","a","pXLSX","XLSX","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","Date","toISOString","ExportButton","label","format","Button","event","generateAndDownloadXlsx","alert","XlsxView","style","textAlign","csv","dsvFormat","scsv","tsv","parse","json","text","lines","split","filter","s","trimStart","startsWith","toml","yaml","safeLoad","stringTransform","fn","safeDump","table","element","xlsx","prettyNames","prettyDescriptions","MainLayout","layoutNames","ThreeColumns","BottomCode","NoCode","ConverterSelect","options","onChange","preventDefault","Dropdown","item","closeOnChange","Menu","minWidth","Item","key","active","description","nSourcesOptions","Toolbar","layout","setDestType","setLayout","nSources","setNSources","fluid","entries","id","n","sourceSamples","A","B","C","Editor","useState","lineWrapping","setLineWrapping","plainEditor","setPlainEditor","e","target","placeholder","onBeforeChange","editor","Icon","circular","position","right","bottom","link","title","navigator","clipboard","writeText","then","toast","Popup","trigger","hoverable","plain","basic","Checkbox","checked","SourceBox","sourceType","onChangeSource","onChangeSourceType","onLoadSample","secondary","size","margin","fontWeight","mode","theme","lineNumbers","useSource","setType","setSource","loadSample","useCallback","TOOLS_INFO","SINGLE_SOURCE_PLACEHOLDER","MULTI_SOURCE_PLACEHOLDER","TransformBox","onChangeTransform","DestBox","comp","readOnly","MainContentPane","setTransform","sourceBoxes","display","flex","flexDirection","i","sourceInfo","sourceBoxProps","getSourceBoxFor","transformBox","destBox","defaultSize","useLayoutState","createPersistedState","useTransformState","App","slice","resultMemoDeps","sourceInfos","useMemo","useTransformResult","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.19b8b64c.chunk.js","sourcesContent":["import React from \"react\";\nimport { ErrorTransformResult } from \"../types\";\n\nexport const ErrorDisplay = ({ result: { error, phase } }: { result: ErrorTransformResult }) => (\n  <div className=\"error-result\">\n    <h2>\n      {error.name || \"Error\"} in {phase}\n    </h2>\n    {error.stack ? <div className=\"error-stack\">{error.stack}</div> : <b>{error.toString()}</b>}\n  </div>\n);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { destinationConverters, sourceConverters } from \"./converters\";\nimport lodash from \"lodash\";\nimport * as ramda from \"ramda\";\nimport { TransformResult } from \"./types\";\nimport { StaticSourceInfo } from \"./sources\";\n\nfunction innerTransform(inputs: string[], transform: string): any {\n  let data = inputs[0];\n  let data1 = inputs[0];\n  let data2 = inputs[1];\n  if (transform.trim().length) {\n    const _ = lodash; // eslint-disable-line\n    const R = ramda; // eslint-disable-line\n    eval(transform); // eslint-disable-line\n  }\n  return data;\n}\n\nexport function doTransform(sources: StaticSourceInfo[], transform: string, destType: string): TransformResult {\n  const inputs = [];\n  for (let index = 0; index < sources.length; index++) {\n    const source = sources[index];\n    try {\n      inputs.push(sourceConverters[source.type](source.source));\n    } catch (error) {\n      return { error, type: \"error\", phase: \"input\", index };\n    }\n  }\n  let data;\n  try {\n    data = innerTransform(inputs, transform);\n  } catch (error) {\n    return { error, type: \"error\", phase: \"transform\" };\n  }\n  try {\n    return destinationConverters[destType](data);\n  } catch (error) {\n    return { error, type: \"error\", phase: \"output\" };\n  }\n}\n","import React from \"react\";\n\ntype ErrorRenderer = (error: Error, errorInfo: React.ErrorInfo | undefined, reset: () => void) => React.ReactChild;\n\nconst defaultRenderError: ErrorRenderer = (error, errorInfo, reset) => (\n  <div>\n    Oops! An error occurred: ${error.toString()}\n    <br />\n    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n    <a href=\"#\" onClick={reset}>\n      Try again\n    </a>\n  </div>\n);\n\ninterface ErrorWrapperProps {\n  render: () => React.ReactChild;\n  renderError?: ErrorRenderer;\n}\n\ninterface ErrorWrapperState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport default class ErrorWrapper extends React.Component<ErrorWrapperProps, ErrorWrapperState> {\n  public state: ErrorWrapperState = {};\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({ error, errorInfo });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (this.props.renderError || defaultRenderError)(this.state.error, this.state.errorInfo, this.resetError);\n    }\n    return this.props.render();\n  }\n\n  private resetError = () => {\n    this.setState({ error: undefined, errorInfo: undefined });\n  };\n}\n","import { DestinationConverter } from \"../types\";\nimport ErrorWrapper from \"./ErrorWrapper\";\nimport React from \"react\";\nimport { ErrorDisplay } from \"./ErrorDisplay\";\nimport Loadable from \"react-loadable\";\nimport { CellInfo } from \"react-table\";\n\nconst LoadableTable = Loadable({\n  loader: () => import(\"react-table\"),\n  loading: () => <div>Loading table</div>,\n});\n\nconst CellRenderer = ({ value }: CellInfo) => {\n  if (typeof value === \"object\") {\n    try {\n      value = JSON.stringify(value);\n    } catch (error) {\n      value = \"<unrenderable>\";\n    }\n  }\n  return <>{value}</>;\n};\n\nfunction getColumns(dataArray: any[]): string[] {\n  const columnOrder: string[] = [];\n  const columnSet = new Set<string>();\n  dataArray.forEach(\n    (datum) =>\n      datum &&\n      Object.keys(datum as object).forEach((column) => {\n        if (!columnSet.has(column)) {\n          columnOrder.push(column);\n          columnSet.add(column);\n        }\n      }),\n  );\n  return columnOrder;\n}\n\nconst TableView = React.memo(({ data }: { data: any }) => {\n  try {\n    const dataArray = Array.from(data);\n    const columnOrder = getColumns(dataArray);\n    if (!columnOrder.length) {\n      return (\n        <ErrorDisplay\n          result={{\n            phase: \"output\",\n            error: new Error(\"Unable to figure out columns\"),\n            type: \"error\",\n          }}\n        />\n      );\n    }\n    return (\n      <LoadableTable\n        data={dataArray}\n        columns={columnOrder.map((col) => ({ accessor: col, Header: col, Cell: CellRenderer }))}\n      />\n    );\n  } catch (error) {\n    return <ErrorDisplay result={{ phase: \"output\", error, type: \"error\" }} />;\n  }\n});\n\nexport const tableConverter: DestinationConverter = (data) => ({\n  error: null,\n  type: \"element\",\n  element: <ErrorWrapper render={() => <TableView data={data} />} />,\n});\n","import { DestinationConverter } from \"../types\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nasync function generateAndDownloadXlsx(data: any, extension: string) {\n  const pXLSX = import(\"xlsx\");\n  const dataArray = Array.from(data);\n  const XLSX = await pXLSX;\n  const ws = XLSX.utils.json_to_sheet(dataArray);\n  const wb = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(wb, ws, \"d2d\");\n  XLSX.writeFile(wb, `d2d-${new Date().toISOString()}.${extension}`);\n}\n\nconst ExportButton = ({ label, format, data }: { label: string; format: string; data: any }) => (\n  <Button\n    onClick={(event) => {\n      try {\n        generateAndDownloadXlsx(data, format);\n      } catch (error) {\n        alert(error);\n      }\n    }}\n  >\n    {label}\n  </Button>\n);\n\nconst XlsxView = ({ data }: { data: any }) => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <ExportButton label=\"Download XLSX\" format=\"xlsx\" data={data} />\n      <ExportButton label=\"Download XLS\" format=\"xls\" data={data} />\n      <ExportButton label=\"Download ODS\" format=\"ods\" data={data} />\n    </div>\n  );\n};\n\nexport const xlsxConverter: DestinationConverter = (data) => ({\n  error: null,\n  type: \"element\",\n  element: <XlsxView data={data} />,\n});\n","import { dsvFormat } from \"d3-dsv\";\nimport toml from \"toml\";\nimport yaml from \"js-yaml\";\nimport { DestinationConverter, SourceConverter, StringTransformResult } from \"./types\";\nimport { tableConverter } from \"./components/TableView\";\nimport { xlsxConverter } from \"./components/XlsxView\";\n\nconst csv = dsvFormat(\",\");\nconst scsv = dsvFormat(\";\");\nconst tsv = dsvFormat(\"\\t\");\n\nexport const sourceConverters: { [key: string]: SourceConverter } = {\n  csv: csv.parse,\n  json: JSON.parse,\n  scsv: scsv.parse,\n  text: (data) => data,\n  lines: (data) => data.split(\"\\n\").filter((s: string) => {\n    s = s.trimStart();\n    return s && !s.startsWith(\"#\");\n  }),\n  toml: toml.parse,\n  tsv: tsv.parse,\n  yaml: yaml.safeLoad,\n};\n\nconst stringTransform = (fn: (data: any) => string) => (data: any) =>\n  ({ value: fn(data), type: \"string\" } as StringTransformResult);\n\nexport const destinationConverters: { [key: string]: DestinationConverter } = {\n  \"json-compact\": stringTransform(JSON.stringify),\n  csv: stringTransform(csv.format),\n  scsv: stringTransform(scsv.format),\n  json: stringTransform((data) => JSON.stringify(data, null, 2)),\n  text: stringTransform((data) => \"\" + data),\n  tsv: stringTransform(tsv.format),\n  yaml: stringTransform(yaml.safeDump),\n  table: tableConverter,\n  xlsx: xlsxConverter,\n};\n\nexport const prettyNames: { [key: string]: string } = {\n  \"json-compact\": \"JSON (compact)\",\n  csv: \"CSV\",\n  json: \"JSON\",\n  scsv: \"SCSV\",\n  table: \"Table\",\n  text: \"Text\",\n  lines: \"Text lines\",\n  toml: \"TOML\",\n  tsv: \"TSV\",\n  xlsx: \"XLS/XLSX\",\n  yaml: \"YAML\",\n};\n\nexport const prettyDescriptions: { [key: string]: string } = {\n  csv: \"Comma-separated values\",\n  scsv: \"Semicolon-separated values\",\n  tsv: \"Tab-separated values\",\n  lines: \"Sans #comments and blanks\",\n};\n","import React from \"react\";\n\nexport interface BaseTransformResult {}\n\nexport interface ElementTransformResult extends BaseTransformResult {\n  type: \"element\";\n  element: React.ReactChild;\n}\n\nexport interface StringTransformResult extends BaseTransformResult {\n  type: \"string\";\n  value: string;\n}\n\nexport interface ErrorTransformResult extends BaseTransformResult {\n  type: \"error\";\n  error: Error;\n  phase: \"input\" | \"transform\" | \"output\";\n  index?: number;\n}\n\nexport type TransformResult = ElementTransformResult | StringTransformResult | ErrorTransformResult;\nexport type SourceConverter = (data: any) => any;\nexport type DestinationConverter<T = TransformResult> = (data: any) => T;\n\nexport interface Styleable {\n  style?: React.CSSProperties;\n}\n\nexport enum MainLayout {\n  ThreeColumns = \"threeColumns\",\n  BottomCode = \"bottomCode\",\n  NoCode = \"noCode\",\n}\n\nexport const layoutNames: { [layout in MainLayout]: string } = {\n  [MainLayout.ThreeColumns]: \"Three Columns\",\n  [MainLayout.BottomCode]: \"Code on Bottom\",\n  [MainLayout.NoCode]: \"No Code\",\n};\nexport type Setter<T> = (t: T) => void;\n","import { Styleable } from \"../types\";\nimport React from \"react\";\nimport { Dropdown, DropdownItemProps } from \"semantic-ui-react\";\nimport { prettyDescriptions, prettyNames } from \"../converters\";\n\ninterface ConverterSelectProps extends Styleable {\n  label: string;\n  value: string;\n  options: string[];\n  onChange: (val: string) => void;\n}\n\nexport const ConverterSelect: React.FC<ConverterSelectProps> = ({ label, value, options, onChange, style }) => {\n  const onClick = (event: any, props: DropdownItemProps) => {\n    onChange(props.name);\n    event.preventDefault();\n  };\n  return (\n    <Dropdown\n      item\n      text={`${label}: ${prettyNames[value] || value}`}\n      /* TODO: these have no effect :-/ */\n      closeOnChange={false}\n    >\n      <Dropdown.Menu style={{ minWidth: \"25em\" }}>\n        {options.map((item) => (\n          <Dropdown.Item\n            key={item}\n            name={item}\n            active={value === item}\n            onClick={onClick}\n            text={prettyNames[item] || item}\n            description={prettyDescriptions[item]}\n          />\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n","import React from \"react\";\nimport { Dropdown, Menu } from \"semantic-ui-react\";\nimport { destinationConverters } from \"../converters\";\nimport { layoutNames, MainLayout, Setter } from \"../types\";\nimport { ConverterSelect } from \"./ConverterSelect\";\n\ninterface ToolbarProps {\n  destType: string;\n  setDestType: Setter<string>;\n  layout: MainLayout;\n  setLayout: Setter<MainLayout>;\n  nSources: number;\n  setNSources: Setter<number>;\n}\n\nconst nSourcesOptions = [1, 2, 3];\n\nexport const Toolbar: React.FC<ToolbarProps> = ({\n  destType,\n  layout,\n  setDestType,\n  setLayout,\n  nSources,\n  setNSources,\n}) => {\n  return (\n    <Menu fluid>\n      <Dropdown item text={`Layout: ${layoutNames[layout]}` || layout}>\n        <Dropdown.Menu>\n          {Object.entries(layoutNames).map(([id, name]) => (\n            <Dropdown.Item\n              key={id}\n              name={id}\n              active={layout === id}\n              text={name}\n              onClick={(event, { name }) => setLayout(name as MainLayout)}\n            />\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown item text={`Sources: ${nSources}`}>\n        <Dropdown.Menu>\n          {nSourcesOptions.map((n) => (\n            <Dropdown.Item key={n} name={n} active={nSources === n} text={n} onClick={() => setNSources(n)} />\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <ConverterSelect\n        label=\"Output Format\"\n        value={destType}\n        options={Object.keys(destinationConverters)}\n        onChange={setDestType}\n      />\n    </Menu>\n  );\n};\n","const yaml = `\n- A: One\n  B: Two\n  C: Three\n- A: Two\n  B: Four\n  C: Five\n- A: Three\n  B: Six\n  C: Seven\n`.trim();\n\nconst toml = `# This is a TOML document.\ntitle = \"TOML Example\"\n[owner]\nname = \"Tom Preston-Werner\"\ndob = 1979-05-27T07:32:00-08:00 # First class dates`;\n\nconst tsv = `A\\tB\\tC\nOne\\tTwo\\tThree\nTwo\\tFour\\tFive\nThree\\tSix\\tSeven`;\n\nconst jsonData = [\n  {\n    A: \"One\",\n    B: \"Two\",\n    C: \"Three\",\n  },\n  {\n    A: \"Two\",\n    B: \"Four\",\n    C: \"Five\",\n  },\n  {\n    A: \"Three\",\n    B: \"Six\",\n    C: \"Seven\",\n  },\n];\n\nconst json = JSON.stringify(jsonData, null, 2);\n\nconst scsv = `\"A\",\"B\",\"C\"\n\"One\",\"Two\",\"Three\"\n\"Two\",\"Four\",\"Five\"\n\"Three\",\"Six\",\"Seven\"`;\n\nconst csv = `A,B,C\nOne,Two,Three\nTwo,Four,Five\nThree,Six,Seven`;\n\nexport const sourceSamples: any = {\n  \"json-compact\": \"json-compact\",\n  csv,\n  scsv,\n  json,\n  text: \"Some arbitrary text\",\n  lines: \"Hello\\nWorld\\n# Octothorpe comments are ignored, as are blank lines:\\n\\n\\n\\nHernekeitto\",\n  tsv,\n  yaml,\n  toml,\n};\n","import { EditorConfiguration } from \"codemirror\";\nimport { Controlled as ControlledCodeMirror } from \"react-codemirror2\";\nimport React from \"react\";\nimport { Checkbox, Icon, Popup } from \"semantic-ui-react\";\nimport { toast } from \"react-semantic-toasts\";\n\ninterface EditorProps {\n  value: string;\n  options: Partial<EditorConfiguration>;\n  onChange: (newValue: string) => void;\n}\n\nconst Editor: React.FC<EditorProps> = ({ value, options, onChange }) => {\n  const [lineWrapping, setLineWrapping] = React.useState(false);\n  const [plainEditor, setPlainEditor] = React.useState(false);\n  const handleCopy = () =>\n    navigator.clipboard.writeText(value).then(\n      () => toast({ type: \"success\", title: `Copied ${value.length} characters.` }),\n      () => toast({ type: \"warning\", title: \"Copy failed.\" }),\n    );\n  return (\n    <>\n      {plainEditor ? (\n        <textarea value={value} onChange={(e) => onChange(e.target.value)} placeholder={options.placeholder} />\n      ) : (\n        <ControlledCodeMirror\n          className=\"code-editor\"\n          value={value}\n          options={{ ...options, lineWrapping }}\n          onBeforeChange={(editor, data, value) => onChange(value)}\n        />\n      )}\n      <Icon\n        circular\n        name=\"copy\"\n        style={{\n          position: \"absolute\",\n          right: \"35px\",\n          bottom: \"5px\",\n        }}\n        link\n        title=\"Copy content\"\n        onClick={handleCopy}\n      />\n      <Popup\n        trigger={\n          <Icon\n            circular\n            name=\"setting\"\n            style={{\n              position: \"absolute\",\n              right: \"5px\",\n              bottom: \"5px\",\n            }}\n          />\n        }\n        hoverable\n        plain\n        basic\n      >\n        <Checkbox\n          label=\"Wrap Lines\"\n          checked={lineWrapping}\n          onChange={(event, data) => setLineWrapping(!!data.checked)}\n        />\n        <br />\n        <Checkbox\n          label=\"Plain Editor\"\n          checked={plainEditor}\n          onChange={(event, data) => setPlainEditor(!!data.checked)}\n        />\n      </Popup>\n    </>\n  );\n};\n\nexport default Editor;\n","import React from \"react\";\nimport Editor from \"./Editor\";\nimport { dataTheme } from \"../consts\";\nimport { Setter, Styleable } from \"../types\";\nimport { prettyNames, sourceConverters } from \"../converters\";\nimport { Menu } from \"semantic-ui-react\";\nimport { ConverterSelect } from \"./ConverterSelect\";\n\nexport interface SourceBoxProps extends Styleable {\n  source: string;\n  sourceType: string;\n  onChangeSource: Setter<string>;\n  onChangeSourceType: Setter<string>;\n  onLoadSample: () => void;\n  label?: string;\n}\n\nexport const SourceBox: React.FC<SourceBoxProps> = ({\n  sourceType,\n  source,\n  onChangeSource,\n  onChangeSourceType,\n  onLoadSample,\n  style,\n  label,\n}) => (\n  <div className=\"codebox-wrapper\" style={style}>\n    <Menu secondary size=\"small\" style={{ margin: 0 }}>\n      {label ? <Menu.Item style={{ fontWeight: \"bold\" }}>{label}</Menu.Item> : null}\n      <ConverterSelect\n        label=\"Source Format\"\n        value={sourceType}\n        options={Object.keys(sourceConverters)}\n        onChange={onChangeSourceType}\n      />\n\n      <Menu.Item name=\"loadSample\" onClick={onLoadSample}>\n        Load {prettyNames[sourceType] || sourceType} Sample\n      </Menu.Item>\n    </Menu>\n    <Editor\n      value={source}\n      options={{\n        mode: sourceType,\n        theme: dataTheme,\n        lineNumbers: true,\n        placeholder: `Paste or type in ${prettyNames[sourceType] || sourceType} data here.`,\n      }}\n      onChange={onChangeSource}\n    />\n  </div>\n);\n","export const dataTheme = \"solarized light\";\nexport const codeTheme = \"solarized dark\";\n","import { Setter, TransformResult } from \"./types\";\nimport React from \"react\";\nimport { sourceSamples } from \"./samples\";\nimport { SourceBox, SourceBoxProps } from \"./components/SourceBox\";\nimport { doTransform } from \"./core\";\n\nexport interface StaticSourceInfo {\n  source: string;\n  type: string;\n}\n\nexport interface SourceInfo extends StaticSourceInfo {\n  loadSample: () => void;\n  setSource: Setter<string>;\n  setType: Setter<string>;\n}\n\nexport function useSource(): SourceInfo {\n  const [type, setType] = React.useState(\"yaml\");\n  const [source, setSource] = React.useState(\"\");\n  const loadSample = React.useCallback(() => {\n    setSource(sourceSamples[type]);\n  }, [type, setSource]);\n  return {\n    type,\n    setType,\n    source,\n    setSource,\n    loadSample,\n  };\n}\n\nexport function getSourceBoxFor(sourceInfo: SourceInfo, label?: string, key?: string) {\n  const sourceBoxProps: SourceBoxProps = {\n    source: sourceInfo.source,\n    sourceType: sourceInfo.type,\n    onChangeSource: sourceInfo.setSource,\n    onChangeSourceType: sourceInfo.setType,\n    onLoadSample: sourceInfo.loadSample,\n    label,\n  };\n  return <SourceBox {...sourceBoxProps} key={key} />;\n}\n\nexport function useTransformResult(sources: SourceInfo[], transform: string, destType: string) {\n  const nSources = sources.length;\n  const resultMemoDeps = [nSources, transform, destType];\n  const sourceInfos: StaticSourceInfo[] = [];\n  for (let i = 0; i < nSources; i++) {\n    const { source, type } = sources[i];\n    resultMemoDeps.push(source);\n    resultMemoDeps.push(type);\n    sourceInfos.push({ source, type });\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const result: TransformResult = React.useMemo(() => doTransform(sourceInfos, transform, destType), resultMemoDeps);\n  return result;\n}\n","import React from \"react\";\nimport Editor from \"./Editor\";\nimport { codeTheme } from \"../consts\";\nimport { Styleable } from \"../types\";\n\ninterface TransformProps extends Styleable {\n  transform: string;\n  nSources: number;\n  onChangeTransform: (s: string) => void;\n}\n\nlet TOOLS_INFO = `\n// * Lodash is available as \\`_\\`\n// ** e.g. \\`_.reverse(data)\\`\n// * Ramda is available as \\`R\\`\n// ** e.g. \\`data = R.reverse(data)\\`\n`.trim();\n\nconst SINGLE_SOURCE_PLACEHOLDER = `\n// Feel free to modify \\`data\\` using JavaScript here.\n${TOOLS_INFO}\n`.trim();\n\nconst MULTI_SOURCE_PLACEHOLDER = `\n// Feel free to modify \\`data\\` using JavaScript here.\n// Multiple sources are available:\n// * as the \\`inputs\\` array\n// * as \\`data1\\`, \\`data2\\`, ...\n//\n${TOOLS_INFO}\n`.trim();\n\nexport const TransformBox: React.FC<TransformProps> = ({ transform, onChangeTransform, nSources, style }) => (\n  <div className=\"codebox-wrapper\" style={style}>\n    <Editor\n      value={transform}\n      options={{\n        mode: \"javascript\",\n        theme: codeTheme,\n        lineNumbers: true,\n        placeholder: nSources > 1 ? MULTI_SOURCE_PLACEHOLDER : SINGLE_SOURCE_PLACEHOLDER,\n      }}\n      onChange={onChangeTransform}\n    />\n  </div>\n);\n","import React from \"react\";\nimport Editor from \"./Editor\";\nimport { dataTheme } from \"../consts\";\nimport { ErrorDisplay } from \"./ErrorDisplay\";\nimport { Styleable, TransformResult } from \"../types\";\nimport { prettyNames } from \"../converters\";\n\ninterface DestProps extends Styleable {\n  destType: string;\n  result: TransformResult;\n}\n\nexport const DestBox: React.FC<DestProps> = ({ destType, result, style }) => {\n  let comp: React.ReactChild | null = null;\n  switch (result.type) {\n    case \"element\":\n      comp = result.element;\n      break;\n    case \"string\":\n      comp = (\n        <Editor\n          value={result.value}\n          options={{\n            mode: destType,\n            theme: dataTheme,\n            lineNumbers: true,\n            readOnly: true,\n            placeholder: `Output will appear here in ${prettyNames[destType] || destType}.`,\n          }}\n          onChange={() => void 8}\n        />\n      );\n      break;\n    case \"error\":\n      comp = <ErrorDisplay result={result} />;\n      break;\n  }\n  return (\n    <div className=\"codebox-wrapper\" style={style}>\n      {comp}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { getSourceBoxFor, SourceInfo } from \"../sources\";\nimport { TransformBox } from \"./TransformBox\";\nimport { DestBox } from \"./DestBox\";\nimport { MainLayout, Setter, TransformResult } from \"../types\";\nimport SplitPane from \"react-split-pane\";\n\ninterface MainContentPaneProps {\n  sources: SourceInfo[];\n  transform: string;\n  setTransform: Setter<string>;\n  destType: string;\n  result: TransformResult;\n  layout: MainLayout;\n}\n\nexport const MainContentPane: React.FC<MainContentPaneProps> = ({\n  sources,\n  transform,\n  setTransform,\n  destType,\n  result,\n  layout,\n}) => {\n  const nSources = sources.length;\n  const sourceBoxes = (\n    <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\n      {sources.map((s, i) => getSourceBoxFor(s, nSources > 1 ? `Input ${i + 1}` : undefined, `input-${i}`))}\n    </div>\n  );\n  const transformBox = <TransformBox transform={transform} onChangeTransform={setTransform} nSources={nSources} />;\n  const destBox = <DestBox destType={destType} result={result} />;\n  switch (layout) {\n    case MainLayout.ThreeColumns:\n    default:\n      return (\n        <SplitPane split=\"vertical\" defaultSize=\"35%\">\n          {sourceBoxes}\n          <SplitPane split=\"vertical\" defaultSize=\"40%\">\n            {transformBox}\n            {destBox}\n          </SplitPane>\n        </SplitPane>\n      );\n    case MainLayout.BottomCode:\n      return (\n        <SplitPane split=\"horizontal\" defaultSize=\"80%\">\n          <SplitPane split=\"vertical\" defaultSize=\"50%\">\n            {sourceBoxes}\n            {destBox}\n          </SplitPane>\n          {transformBox}\n        </SplitPane>\n      );\n    case MainLayout.NoCode:\n      return (\n        <SplitPane split=\"vertical\" defaultSize=\"50%\">\n          {sourceBoxes}\n          {destBox}\n        </SplitPane>\n      );\n  }\n};\n","import React from \"react\";\nimport { MainLayout } from \"./types\";\nimport { Toolbar } from \"./components/Toolbar\";\nimport createPersistedState from \"use-persisted-state\";\nimport { SemanticToastContainer } from \"react-semantic-toasts\";\nimport \"react-semantic-toasts/styles/react-semantic-alert.css\";\nimport { useSource, useTransformResult } from \"./sources\";\nimport { MainContentPane } from \"./components/MainContentPane\";\n\nconst useLayoutState = createPersistedState(\"d2d-layout\");\nconst useTransformState = createPersistedState(\"d2d-transform\");\n\nconst App: React.FC = () => {\n  const [nSources, setNSources] = React.useState(1);\n  const [destType, setDestType] = React.useState(\"json\");\n  const [transform, setTransform] = useTransformState(\"\");\n  const [layout, setLayout] = useLayoutState(MainLayout.ThreeColumns);\n  const source1 = useSource();\n  const source2 = useSource();\n  const source3 = useSource();\n  const sources = [source1, source2, source3].slice(0, nSources);\n  const result = useTransformResult(sources, transform, destType);\n  return (\n    <>\n      <div id=\"settings\">\n        <Toolbar\n          nSources={nSources}\n          setNSources={setNSources}\n          destType={destType}\n          setDestType={setDestType}\n          layout={layout}\n          setLayout={setLayout}\n        />\n      </div>\n      <div id=\"main-panes\">\n        <MainContentPane\n          sources={sources}\n          transform={transform}\n          setTransform={setTransform}\n          destType={destType}\n          result={result}\n          layout={layout}\n        />\n      </div>\n      <SemanticToastContainer position=\"top-right\" />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-table/react-table.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/solarized.css\";\nimport \"codemirror/mode/yaml/yaml\";\nimport \"codemirror/mode/toml/toml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/display/placeholder\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}