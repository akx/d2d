{"version":3,"sources":["transformers/javascript.tsx","types.tsx","components/ErrorWrapper.tsx","components/ErrorDisplay.tsx","components/TableView.tsx","components/XlsxView.tsx","converters.tsx","components/SelectDropdown.tsx","components/Toolbar.tsx","samples.tsx","components/Editor.tsx","consts.tsx","components/SourceBox.tsx","transformers/tem.tsx","transformers/index.tsx","sources.tsx","core.tsx","components/TransformBox.tsx","components/DestBox.tsx","components/MainContentPane.tsx","App.tsx","index.tsx"],"names":["javascriptTransform","transform","inputs","data","data1","data2","trim","length","_","lodash","R","ramda","eval","MainLayout","layoutNames","ThreeColumns","BottomCode","NoCode","defaultRenderError","error","errorInfo","reset","toString","href","onClick","ErrorWrapper","state","resetError","setState","undefined","this","props","renderError","render","React","Component","ErrorDisplay","result","phase","className","name","stack","LoadableTable","Loadable","loader","loading","CellRenderer","value","JSON","stringify","TableView","memo","dataArray","Array","from","columnOrder","columnSet","Set","forEach","datum","Object","keys","column","has","push","add","getColumns","columns","map","col","accessor","Header","Cell","Error","type","extension","a","pXLSX","XLSX","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","Date","toISOString","ExportButton","label","format","Button","event","generateAndDownloadXlsx","alert","XlsxView","style","textAlign","csv","dsvFormat","scsv","tsv","sourceConverters","parse","json","text","lines","split","filter","s","trimStart","startsWith","toml","yaml","safeLoad","stringTransform","fn","destinationConverters","safeDump","table","element","xlsx","converterPrettyNames","converterDescriptions","SelectDropdown","options","onChange","nameMap","descriptionMap","preventDefault","Dropdown","item","closeOnChange","Menu","minWidth","Item","key","active","description","nSourcesOptions","Toolbar","destType","layout","setDestType","setLayout","nSources","setNSources","fluid","entries","id","n","sourceSamples","A","B","C","Editor","useState","lineWrapping","setLineWrapping","plainEditor","setPlainEditor","e","target","placeholder","onBeforeChange","editor","Icon","circular","position","right","bottom","link","title","navigator","clipboard","writeText","then","toast","Popup","trigger","hoverable","plain","basic","Checkbox","checked","SourceBox","sourceType","source","onChangeSource","onChangeSourceType","onLoadSample","disablePlaceholder","setDisablePlaceholder","clearData","useCallback","Message","toLocaleString","primary","negative","mode","theme","lineNumbers","secondary","size","margin","fontWeight","TemEditor","onChangeTransform","rules","updateTransform","handleChangeEvent","field","indexStr","index","parseInt","Number","isNaN","rule","editRule","width","colSpan","match","replace","r","i","Input","icon","splice","temTransform","isArray","join","matchRe","RegExp","getEditor","transformers","javascript","tem","prettyTransformNames","useSource","setType","setSource","loadSample","useTransformResult","sources","transformType","resultMemoDeps","sourceInfos","useMemo","doTransform","TOOLS_INFO","SINGLE_SOURCE_PLACEHOLDER","MULTI_SOURCE_PLACEHOLDER","TransformBox","onChangeTransformType","transformer","ErrorFallback","resetErrorBoundary","componentStack","message","FallbackComponent","DestBox","comp","readOnly","MainContentPane","sourceBoxes","display","flex","flexDirection","sourceInfo","sourceBoxProps","getSourceBoxFor","transformBox","destBox","defaultSize","useLayoutState","createPersistedState","useTransformState","useTransformTypeState","App","setTransform","setTransformType","slice","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.439744bb.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Transformer } from \"../types\";\nimport lodash from \"lodash\";\nimport * as ramda from \"ramda\";\n\nexport const javascriptTransform: Transformer = {\n  transform(inputs, transform) {\n    let data = inputs[0];\n    let data1 = inputs[0];\n    let data2 = inputs[1];\n    if (transform.trim().length) {\n      const _ = lodash;\n      const R = ramda;\n      eval(transform); // eslint-disable-line no-eval\n    }\n    return data;\n  },\n};\n","import React from \"react\";\n\nexport interface BaseTransformResult {}\n\nexport interface ElementTransformResult extends BaseTransformResult {\n  type: \"element\";\n  element: React.ReactChild;\n}\n\nexport interface StringTransformResult extends BaseTransformResult {\n  type: \"string\";\n  value: string;\n}\n\nexport interface ErrorTransformResult extends BaseTransformResult {\n  type: \"error\";\n  error: Error;\n  phase: \"input\" | \"transform\" | \"output\";\n  index?: number;\n}\n\nexport type TransformResult = ElementTransformResult | StringTransformResult | ErrorTransformResult;\nexport type SourceConverter = (data: any) => any;\n\nexport interface Transformer {\n  transform: (inputs: any[], transform: string) => any;\n  getEditor?: (transform: string, onChangeTransform: Setter<string>, nSources: number) => React.ReactChild;\n}\n\nexport type DestinationConverter<T = TransformResult> = (data: any) => T;\n\nexport interface Styleable {\n  style?: React.CSSProperties;\n}\n\nexport enum MainLayout {\n  ThreeColumns = \"threeColumns\",\n  BottomCode = \"bottomCode\",\n  NoCode = \"noCode\",\n}\n\nexport const layoutNames: { [layout in MainLayout]: string } = {\n  [MainLayout.ThreeColumns]: \"Three Columns\",\n  [MainLayout.BottomCode]: \"Code on Bottom\",\n  [MainLayout.NoCode]: \"No Code\",\n};\nexport type Setter<T> = (t: T) => void;\n","import React from \"react\";\n\ntype ErrorRenderer = (error: Error, errorInfo: React.ErrorInfo | undefined, reset: () => void) => React.ReactChild;\n\nconst defaultRenderError: ErrorRenderer = (error, errorInfo, reset) => (\n  <div>\n    Oops! An error occurred: ${error.toString()}\n    <br />\n    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n    <a href=\"#\" onClick={reset}>\n      Try again\n    </a>\n  </div>\n);\n\ninterface ErrorWrapperProps {\n  render: () => React.ReactChild;\n  renderError?: ErrorRenderer;\n}\n\ninterface ErrorWrapperState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport default class ErrorWrapper extends React.Component<ErrorWrapperProps, ErrorWrapperState> {\n  public state: ErrorWrapperState = {};\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({ error, errorInfo });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (this.props.renderError || defaultRenderError)(this.state.error, this.state.errorInfo, this.resetError);\n    }\n    return this.props.render();\n  }\n\n  private resetError = () => {\n    this.setState({ error: undefined, errorInfo: undefined });\n  };\n}\n","import React from \"react\";\nimport { ErrorTransformResult } from \"../types\";\n\nexport const ErrorDisplay = ({ result: { error, phase } }: { result: ErrorTransformResult }) => (\n  <div className=\"error-result\">\n    <h2>\n      {error.name || \"Error\"} in {phase}\n    </h2>\n    {error.stack ? <div className=\"error-stack\">{error.stack}</div> : <b>{error.toString()}</b>}\n  </div>\n);\n","import { DestinationConverter } from \"../types\";\nimport ErrorWrapper from \"./ErrorWrapper\";\nimport React from \"react\";\nimport { ErrorDisplay } from \"./ErrorDisplay\";\nimport Loadable from \"react-loadable\";\nimport { CellInfo } from \"react-table\";\n\nconst LoadableTable = Loadable({\n  loader: () => import(\"react-table\"),\n  loading: () => <div>Loading table</div>,\n});\n\nconst CellRenderer = ({ value }: CellInfo) => {\n  if (typeof value === \"object\") {\n    try {\n      value = JSON.stringify(value);\n    } catch (error) {\n      value = \"<unrenderable>\";\n    }\n  }\n  return <>{value}</>;\n};\n\nfunction getColumns(dataArray: any[]): string[] {\n  const columnOrder: string[] = [];\n  const columnSet = new Set<string>();\n  dataArray.forEach(\n    (datum) =>\n      datum &&\n      Object.keys(datum as object).forEach((column) => {\n        if (!columnSet.has(column)) {\n          columnOrder.push(column);\n          columnSet.add(column);\n        }\n      }),\n  );\n  return columnOrder;\n}\n\nconst TableView = React.memo(({ data }: { data: any }) => {\n  try {\n    const dataArray = Array.from(data);\n    const columnOrder = getColumns(dataArray);\n    if (!columnOrder.length) {\n      return (\n        <ErrorDisplay\n          result={{\n            phase: \"output\",\n            error: new Error(\"Unable to figure out columns\"),\n            type: \"error\",\n          }}\n        />\n      );\n    }\n    return (\n      <LoadableTable\n        data={dataArray}\n        columns={columnOrder.map((col) => ({ accessor: col, Header: col, Cell: CellRenderer }))}\n      />\n    );\n  } catch (error) {\n    return <ErrorDisplay result={{ phase: \"output\", error, type: \"error\" }} />;\n  }\n});\n\nexport const tableConverter: DestinationConverter = (data) => ({\n  error: null,\n  type: \"element\",\n  element: <ErrorWrapper render={() => <TableView data={data} />} />,\n});\n","import { DestinationConverter } from \"../types\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nasync function generateAndDownloadXlsx(data: any, extension: string) {\n  const pXLSX = import(\"xlsx\");\n  const dataArray = Array.from(data);\n  const XLSX = await pXLSX;\n  const ws = XLSX.utils.json_to_sheet(dataArray);\n  const wb = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(wb, ws, \"d2d\");\n  XLSX.writeFile(wb, `d2d-${new Date().toISOString()}.${extension}`);\n}\n\nconst ExportButton = ({ label, format, data }: { label: string; format: string; data: any }) => (\n  <Button\n    onClick={(event) => {\n      try {\n        generateAndDownloadXlsx(data, format);\n      } catch (error) {\n        alert(error);\n      }\n    }}\n  >\n    {label}\n  </Button>\n);\n\nconst XlsxView = ({ data }: { data: any }) => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <ExportButton label=\"Download XLSX\" format=\"xlsx\" data={data} />\n      <ExportButton label=\"Download XLS\" format=\"xls\" data={data} />\n      <ExportButton label=\"Download ODS\" format=\"ods\" data={data} />\n    </div>\n  );\n};\n\nexport const xlsxConverter: DestinationConverter = (data) => ({\n  error: null,\n  type: \"element\",\n  element: <XlsxView data={data} />,\n});\n","import { dsvFormat } from \"d3-dsv\";\nimport toml from \"toml\";\nimport yaml from \"js-yaml\";\nimport { DestinationConverter, SourceConverter, StringTransformResult } from \"./types\";\nimport { tableConverter } from \"./components/TableView\";\nimport { xlsxConverter } from \"./components/XlsxView\";\n\nconst csv = dsvFormat(\",\");\nconst scsv = dsvFormat(\";\");\nconst tsv = dsvFormat(\"\\t\");\n\nfunction parseLines(data: string) {\n  return data.split(\"\\n\").filter((s: string) => {\n    s = s.trimStart();\n    return s && !s.startsWith(\"#\");\n  });\n}\n\nexport const sourceConverters: { [key: string]: SourceConverter } = {\n  csv: csv.parse,\n  json: JSON.parse,\n  scsv: scsv.parse,\n  text: (data) => data,\n  lines: parseLines,\n  toml: toml.parse,\n  tsv: tsv.parse,\n  yaml: yaml.safeLoad,\n};\n\nconst stringTransform = (fn: (data: any) => string) => (data: any) =>\n  ({ value: fn(data), type: \"string\" } as StringTransformResult);\n\nexport const destinationConverters: { [key: string]: DestinationConverter } = {\n  \"json-compact\": stringTransform(JSON.stringify),\n  csv: stringTransform(csv.format),\n  scsv: stringTransform(scsv.format),\n  json: stringTransform((data) => JSON.stringify(data, null, 2)),\n  text: stringTransform((data) => \"\" + data),\n  tsv: stringTransform(tsv.format),\n  yaml: stringTransform(yaml.safeDump),\n  table: tableConverter,\n  xlsx: xlsxConverter,\n};\n\nexport const converterPrettyNames: { [key: string]: string } = {\n  \"json-compact\": \"JSON (compact)\",\n  csv: \"CSV\",\n  json: \"JSON\",\n  scsv: \"SCSV\",\n  table: \"Table\",\n  text: \"Text\",\n  lines: \"Text lines\",\n  toml: \"TOML\",\n  tsv: \"TSV\",\n  xlsx: \"XLS/XLSX\",\n  yaml: \"YAML\",\n};\n\nexport const converterDescriptions: { [key: string]: string } = {\n  csv: \"Comma-separated values\",\n  scsv: \"Semicolon-separated values\",\n  tsv: \"Tab-separated values\",\n  lines: \"Sans #comments and blanks\",\n};\n","import { Styleable } from \"../types\";\nimport React from \"react\";\nimport { Dropdown, DropdownItemProps } from \"semantic-ui-react\";\n\ninterface SelectDropdownProps extends Styleable {\n  label: string;\n  value: string;\n  options: string[];\n  onChange: (val: string) => void;\n  nameMap: Record<string, string>;\n  descriptionMap?: Record<string, string>;\n}\n\nexport const SelectDropdown: React.FC<SelectDropdownProps> = ({\n  label,\n  value,\n  options,\n  onChange,\n  style,\n  nameMap,\n  descriptionMap,\n}) => {\n  const onClick = (event: any, props: DropdownItemProps) => {\n    onChange(props.name);\n    event.preventDefault();\n  };\n  return (\n    <Dropdown\n      item\n      text={`${label}: ${nameMap[value] || value}`}\n      /* TODO: these have no effect :-/ */\n      closeOnChange={false}\n    >\n      <Dropdown.Menu style={{ minWidth: \"25em\" }}>\n        {options.map((item) => (\n          <Dropdown.Item\n            key={item}\n            name={item}\n            active={value === item}\n            onClick={onClick}\n            text={nameMap[item] || item}\n            description={descriptionMap ? descriptionMap[item] : undefined}\n          />\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n","import React from \"react\";\nimport { Dropdown, Menu } from \"semantic-ui-react\";\nimport { destinationConverters, converterDescriptions, converterPrettyNames } from \"../converters\";\nimport { layoutNames, MainLayout, Setter } from \"../types\";\nimport { SelectDropdown } from \"./SelectDropdown\";\n\ninterface ToolbarProps {\n  destType: string;\n  setDestType: Setter<string>;\n  layout: MainLayout;\n  setLayout: Setter<MainLayout>;\n  nSources: number;\n  setNSources: Setter<number>;\n}\n\nconst nSourcesOptions = [1, 2, 3];\n\nexport const Toolbar: React.FC<ToolbarProps> = ({\n  destType,\n  layout,\n  setDestType,\n  setLayout,\n  nSources,\n  setNSources,\n}) => {\n  return (\n    <Menu fluid>\n      <Dropdown item text={`Layout: ${layoutNames[layout]}` || layout}>\n        <Dropdown.Menu>\n          {Object.entries(layoutNames).map(([id, name]) => (\n            <Dropdown.Item\n              key={id}\n              name={id}\n              active={layout === id}\n              text={name}\n              onClick={(event, { name }) => setLayout(name as MainLayout)}\n            />\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown item text={`Sources: ${nSources}`}>\n        <Dropdown.Menu>\n          {nSourcesOptions.map((n) => (\n            <Dropdown.Item key={n} name={n} active={nSources === n} text={n} onClick={() => setNSources(n)} />\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <SelectDropdown\n        label=\"Output Format\"\n        value={destType}\n        options={Object.keys(destinationConverters)}\n        onChange={setDestType}\n        descriptionMap={converterDescriptions}\n        nameMap={converterPrettyNames}\n      />\n    </Menu>\n  );\n};\n","const yaml = `\n- A: One\n  B: Two\n  C: Three\n- A: Two\n  B: Four\n  C: Five\n- A: Three\n  B: Six\n  C: Seven\n`.trim();\n\nconst toml = `# This is a TOML document.\ntitle = \"TOML Example\"\n[owner]\nname = \"Tom Preston-Werner\"\ndob = 1979-05-27T07:32:00-08:00 # First class dates`;\n\nconst tsv = `A\\tB\\tC\nOne\\tTwo\\tThree\nTwo\\tFour\\tFive\nThree\\tSix\\tSeven`;\n\nconst jsonData = [\n  {\n    A: \"One\",\n    B: \"Two\",\n    C: \"Three\",\n  },\n  {\n    A: \"Two\",\n    B: \"Four\",\n    C: \"Five\",\n  },\n  {\n    A: \"Three\",\n    B: \"Six\",\n    C: \"Seven\",\n  },\n];\n\nconst json = JSON.stringify(jsonData, null, 2);\n\nconst scsv = `\"A\",\"B\",\"C\"\n\"One\",\"Two\",\"Three\"\n\"Two\",\"Four\",\"Five\"\n\"Three\",\"Six\",\"Seven\"`;\n\nconst csv = `A,B,C\nOne,Two,Three\nTwo,Four,Five\nThree,Six,Seven`;\n\nexport const sourceSamples: any = {\n  \"json-compact\": \"json-compact\",\n  csv,\n  scsv,\n  json,\n  text: \"Some arbitrary text\",\n  lines: \"Hello\\nWorld\\n# Octothorpe comments are ignored, as are blank lines:\\n\\n\\n\\nHernekeitto\",\n  tsv,\n  yaml,\n  toml,\n};\n","import { EditorConfiguration } from \"codemirror\";\nimport { Controlled as ControlledCodeMirror } from \"react-codemirror2\";\nimport React from \"react\";\nimport { Checkbox, Icon, Popup } from \"semantic-ui-react\";\nimport { toast } from \"react-semantic-toasts\";\nimport { longValueThreshold } from \"../consts\";\n\ninterface EditorProps {\n  value: string;\n  options: Partial<EditorConfiguration>;\n  onChange: (newValue: string) => void;\n}\n\nconst Editor: React.FC<EditorProps> = ({ value, options, onChange }) => {\n  const [lineWrapping, setLineWrapping] = React.useState(false);\n  const [plainEditor, setPlainEditor] = React.useState(!!(value && value.length > longValueThreshold));\n  const handleCopy = () =>\n    navigator.clipboard.writeText(value).then(\n      () => toast({ type: \"success\", title: `Copied ${value.length} characters.` }),\n      () => toast({ type: \"warning\", title: \"Copy failed.\" }),\n    );\n  return (\n    <>\n      {plainEditor ? (\n        <textarea value={value} onChange={(e) => onChange(e.target.value)} placeholder={options.placeholder} />\n      ) : (\n        <ControlledCodeMirror\n          className=\"code-editor\"\n          value={value}\n          options={{ ...options, lineWrapping }}\n          onBeforeChange={(editor, data, value) => onChange(value)}\n        />\n      )}\n      <Icon\n        circular\n        name=\"copy\"\n        style={{\n          position: \"absolute\",\n          right: \"35px\",\n          bottom: \"5px\",\n        }}\n        link\n        title=\"Copy content\"\n        onClick={handleCopy}\n      />\n      <Popup\n        trigger={\n          <Icon\n            circular\n            name=\"setting\"\n            style={{\n              position: \"absolute\",\n              right: \"5px\",\n              bottom: \"5px\",\n            }}\n          />\n        }\n        hoverable\n        plain\n        basic\n      >\n        <Checkbox\n          label=\"Wrap Lines\"\n          checked={lineWrapping}\n          onChange={(event, data) => setLineWrapping(!!data.checked)}\n        />\n        <br />\n        <Checkbox\n          label=\"Plain Editor\"\n          checked={plainEditor}\n          onChange={(event, data) => setPlainEditor(!!data.checked)}\n        />\n      </Popup>\n    </>\n  );\n};\n\nexport default Editor;\n","export const dataTheme = \"solarized light\";\nexport const codeTheme = \"solarized dark\";\nexport const longValueThreshold = 500_000;\n","import React from \"react\";\nimport Editor from \"./Editor\";\nimport { dataTheme, longValueThreshold } from \"../consts\";\nimport { Setter, Styleable } from \"../types\";\nimport { converterDescriptions, converterPrettyNames, sourceConverters } from \"../converters\";\nimport { Button, Menu, Message } from \"semantic-ui-react\";\nimport { SelectDropdown } from \"./SelectDropdown\";\n\nexport interface SourceBoxProps extends Styleable {\n  source: string;\n  sourceType: string;\n  onChangeSource: Setter<string>;\n  onChangeSourceType: Setter<string>;\n  onLoadSample: () => void;\n  label?: string;\n}\n\nexport const SourceBox: React.FC<SourceBoxProps> = ({\n  sourceType,\n  source,\n  onChangeSource,\n  onChangeSourceType,\n  onLoadSample,\n  style,\n  label,\n}) => {\n  const [disablePlaceholder, setDisablePlaceholder] = React.useState(false);\n  const clearData = React.useCallback(() => {\n    setDisablePlaceholder(false);\n    onChangeSource(\"\");\n  }, [setDisablePlaceholder, onChangeSource]);\n  const editor =\n    source.length > longValueThreshold && !disablePlaceholder ? (\n      <div>\n        <Message>\n          <Message.Header>Large Content</Message.Header>\n          <p>\n            The length of this data is {source.length.toLocaleString()} characters.\n            <br />\n            Showing it may cause performance problems.\n            <br />\n          </p>\n          <p>\n            <Button primary onClick={() => setDisablePlaceholder(true)}>\n              Show it anyway\n            </Button>\n            <Button negative basic onClick={clearData}>\n              Clear the data\n            </Button>\n          </p>\n        </Message>\n      </div>\n    ) : (\n      <Editor\n        value={source}\n        options={{\n          mode: sourceType,\n          theme: dataTheme,\n          lineNumbers: true,\n          placeholder: `Paste, drop or type in ${converterPrettyNames[sourceType] || sourceType} data here.`,\n        }}\n        onChange={onChangeSource}\n      />\n    );\n  return (\n    <div className=\"codebox-wrapper\" style={style}>\n      <Menu secondary size=\"small\" style={{ margin: 0 }}>\n        {label ? <Menu.Item style={{ fontWeight: \"bold\" }}>{label}</Menu.Item> : null}\n        <SelectDropdown\n          label=\"Source Format\"\n          value={sourceType}\n          options={Object.keys(sourceConverters)}\n          onChange={onChangeSourceType}\n          nameMap={converterPrettyNames}\n          descriptionMap={converterDescriptions}\n        />\n        <Menu.Item name=\"loadSample\" onClick={onLoadSample}>\n          Load {converterPrettyNames[sourceType] || sourceType} Sample\n        </Menu.Item>\n      </Menu>\n      {editor}\n    </div>\n  );\n};\n","import { Transformer } from \"../types\";\nimport React from \"react\";\nimport { TransformSourceProps } from \"../components/TransformBox\";\nimport { Button, Input } from \"semantic-ui-react\";\nimport Icon from \"semantic-ui-react/dist/commonjs/elements/Icon\";\n\ninterface TemRule {\n  match: string;\n  replace: string;\n}\n\ninterface TemState {\n  rules: TemRule[];\n}\n\nconst TemEditor: React.FC<TransformSourceProps> = ({ transform, onChangeTransform }) => {\n  let state: TemState = { rules: [] };\n  if (transform.trim()) {\n    try {\n      state = JSON.parse(transform) as TemState;\n    } catch (e) {\n      throw new Error(`Invalid Tem state: ${e}`);\n    }\n  }\n\n  const updateTransform = () => onChangeTransform(JSON.stringify(state));\n\n  const handleAddRule = () => {\n    state.rules.push({ match: \"\", replace: \"\" });\n    updateTransform();\n  };\n\n  const editRule = (index: number, field: \"match\" | \"replace\", value: string) => {\n    const rule = state.rules[index];\n    if (rule) {\n      rule[field] = value;\n    }\n    updateTransform();\n  };\n\n  const handleChangeEvent = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const [field, indexStr] = event.target.name.split(\"_\");\n    const index = parseInt(indexStr, 10);\n    if (Number.isNaN(index)) return;\n    switch (field) {\n      case \"match\":\n      case \"replace\":\n        editRule(index, field, event.target.value);\n    }\n  };\n\n  const deleteRule = (index: number) => {\n    if (Number.isNaN(index)) return;\n    state.rules.splice(index, 1);\n    updateTransform();\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Match</th>\n          <th>Replacement</th>\n          <th style={{ width: \"1px\" }} />\n        </tr>\n      </thead>\n      <tfoot>\n        <tr>\n          <th colSpan={3}>\n            <Button onClick={handleAddRule}>Add Rule</Button>\n          </th>\n        </tr>\n      </tfoot>\n      <tbody>\n        {state.rules.map((r, i) => (\n          <tr key={i}>\n            <td>\n              <Input\n                fluid\n                placeholder=\"Match regexp\"\n                name={`match_${i}`}\n                value={r.match}\n                onChange={handleChangeEvent}\n              />\n            </td>\n            <td>\n              <Input\n                fluid\n                placeholder=\"Replacement\"\n                name={`replace_${i}`}\n                value={r.replace}\n                onChange={handleChangeEvent}\n              />\n            </td>\n            <td>\n              <Button icon negative onClick={() => deleteRule(i)}>\n                <Icon name=\"trash\" />\n              </Button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport const temTransform: Transformer = {\n  transform(inputs, transform) {\n    const rules: TemRule[] = (JSON.parse(transform) as TemState).rules;\n    let data = Array.isArray(inputs[0]) ? inputs.map((s) => `${s}`).join(\"\\n\") : `${inputs[0]}`;\n    rules.forEach((rule) => {\n      if (!rule.match) return;\n      const matchRe = new RegExp(rule.match, \"gm\");\n      data = data.replace(matchRe, rule.replace);\n    });\n    return data;\n  },\n  getEditor(transform, onChangeTransform): React.ReactChild {\n    return <TemEditor transform={transform} onChangeTransform={onChangeTransform} />;\n  },\n};\n","import { Transformer } from \"../types\";\nimport { javascriptTransform } from \"./javascript\";\nimport { temTransform } from \"./tem\";\n\nexport const transformers: Record<string, Transformer> = {\n  javascript: javascriptTransform,\n  tem: temTransform,\n};\nexport const prettyTransformNames: Record<string, string> = {\n  javascript: \"JavaScript\",\n  tem: \"Tem String Replace\",\n};\n","import { Setter, TransformResult } from \"./types\";\nimport React from \"react\";\nimport { sourceSamples } from \"./samples\";\nimport { SourceBox, SourceBoxProps } from \"./components/SourceBox\";\nimport { doTransform } from \"./core\";\n\nexport interface StaticSourceInfo {\n  source: string;\n  type: string;\n}\n\nexport interface SourceInfo extends StaticSourceInfo {\n  loadSample: () => void;\n  setSource: Setter<string>;\n  setType: Setter<string>;\n}\n\nexport function useSource(): SourceInfo {\n  const [type, setType] = React.useState(\"yaml\");\n  const [source, setSource] = React.useState(\"\");\n  const loadSample = React.useCallback(() => {\n    setSource(sourceSamples[type]);\n  }, [type, setSource]);\n  return {\n    type,\n    setType,\n    source,\n    setSource,\n    loadSample,\n  };\n}\n\nexport function getSourceBoxFor(sourceInfo: SourceInfo, label?: string, key?: string) {\n  const sourceBoxProps: SourceBoxProps = {\n    source: sourceInfo.source,\n    sourceType: sourceInfo.type,\n    onChangeSource: sourceInfo.setSource,\n    onChangeSourceType: sourceInfo.setType,\n    onLoadSample: sourceInfo.loadSample,\n    label,\n  };\n  return <SourceBox {...sourceBoxProps} key={key} />;\n}\n\nexport function useTransformResult(sources: SourceInfo[], transform: string, transformType: string, destType: string) {\n  const nSources = sources.length;\n  const resultMemoDeps = [nSources, transform, transformType, destType];\n  const sourceInfos: StaticSourceInfo[] = [];\n  for (let i = 0; i < nSources; i++) {\n    const { source, type } = sources[i];\n    resultMemoDeps.push(source);\n    resultMemoDeps.push(type);\n    sourceInfos.push({ source, type });\n  }\n  const result: TransformResult = React.useMemo(\n    () => doTransform(sourceInfos, transform, transformType, destType),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    resultMemoDeps,\n  );\n  return result;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { destinationConverters, sourceConverters } from \"./converters\";\nimport { transformers } from \"./transformers\";\nimport { TransformResult } from \"./types\";\nimport { StaticSourceInfo } from \"./sources\";\n\nexport function doTransform(\n  sources: StaticSourceInfo[],\n  transform: string,\n  transformType: string,\n  destType: string,\n): TransformResult {\n  const inputs: any[] = [];\n  for (let index = 0; index < sources.length; index++) {\n    const source = sources[index];\n    try {\n      inputs.push(sourceConverters[source.type](source.source));\n    } catch (error) {\n      return { error, type: \"error\", phase: \"input\", index };\n    }\n  }\n  let data;\n  try {\n    data = transformers[transformType].transform(inputs, transform);\n  } catch (error) {\n    return { error, type: \"error\", phase: \"transform\" };\n  }\n  try {\n    return destinationConverters[destType](data);\n  } catch (error) {\n    return { error, type: \"error\", phase: \"output\" };\n  }\n}\n","import React from \"react\";\nimport Editor from \"./Editor\";\nimport { codeTheme } from \"../consts\";\nimport { Setter, Styleable } from \"../types\";\nimport { Button, Menu, Message } from \"semantic-ui-react\";\nimport { SelectDropdown } from \"./SelectDropdown\";\nimport { prettyTransformNames, transformers } from \"../transformers\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nexport interface TransformSourceProps {\n  transform: string;\n  onChangeTransform: Setter<string>;\n}\n\nexport interface TransformTypeProps {\n  transformType: string;\n  onChangeTransformType: Setter<string>;\n}\n\ninterface TransformProps extends TransformTypeProps, TransformSourceProps, Styleable {\n  nSources: number;\n}\n\nlet TOOLS_INFO = `\n// * Lodash is available as \\`_\\`\n// ** e.g. \\`_.reverse(data)\\`\n// * Ramda is available as \\`R\\`\n// ** e.g. \\`data = R.reverse(data)\\`\n`.trim();\n\nconst SINGLE_SOURCE_PLACEHOLDER = `\n// Feel free to modify \\`data\\` using JavaScript here.\n${TOOLS_INFO}\n`.trim();\n\nconst MULTI_SOURCE_PLACEHOLDER = `\n// Feel free to modify \\`data\\` using JavaScript here.\n// Multiple sources are available:\n// * as the \\`inputs\\` array\n// * as \\`data1\\`, \\`data2\\`, ...\n//\n${TOOLS_INFO}\n`.trim();\n\nexport const TransformBox: React.FC<TransformProps> = ({\n  transform,\n  transformType,\n  onChangeTransform,\n  onChangeTransformType,\n  nSources,\n  style,\n}) => {\n  const transformer = transformers[transformType];\n  const editor = transformer.getEditor ? (\n    transformer.getEditor(transform, onChangeTransform, nSources)\n  ) : (\n    <Editor\n      value={transform}\n      options={{\n        mode: \"javascript\",\n        theme: codeTheme,\n        lineNumbers: true,\n        placeholder: nSources > 1 ? MULTI_SOURCE_PLACEHOLDER : SINGLE_SOURCE_PLACEHOLDER,\n      }}\n      onChange={onChangeTransform}\n    />\n  );\n  const ErrorFallback = React.useCallback(\n    ({ error, componentStack, resetErrorBoundary }) => {\n      return (\n        <Message negative>\n          <p>\n            The editor failed to render. The error message we got was \"<b>{error.message}</b>\".\n          </p>\n          <p>\n            You can either change the transform type to something that's compatible with your data, or click below to\n            reset your transform code.\n          </p>\n          <Button\n            onClick={() => {\n              onChangeTransform(\"\");\n              resetErrorBoundary();\n            }}\n          >\n            Reset transform\n          </Button>\n        </Message>\n      );\n    },\n    [onChangeTransform],\n  );\n\n  return (\n    <div className=\"codebox-wrapper\" style={style}>\n      <Menu secondary size=\"small\" style={{ margin: 0 }}>\n        <SelectDropdown\n          label=\"Language\"\n          value={transformType}\n          options={Object.keys(transformers)}\n          onChange={onChangeTransformType}\n          nameMap={prettyTransformNames}\n        />\n      </Menu>\n      <ErrorBoundary FallbackComponent={ErrorFallback}>{editor}</ErrorBoundary>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Editor from \"./Editor\";\nimport { dataTheme } from \"../consts\";\nimport { ErrorDisplay } from \"./ErrorDisplay\";\nimport { Styleable, TransformResult } from \"../types\";\nimport { converterPrettyNames } from \"../converters\";\n\ninterface DestProps extends Styleable {\n  destType: string;\n  result: TransformResult;\n}\n\nexport const DestBox: React.FC<DestProps> = ({ destType, result, style }) => {\n  let comp: React.ReactChild | null = null;\n  switch (result.type) {\n    case \"element\":\n      comp = result.element;\n      break;\n    case \"string\":\n      comp = (\n        <Editor\n          value={result.value}\n          options={{\n            mode: destType,\n            theme: dataTheme,\n            lineNumbers: true,\n            readOnly: true,\n            placeholder: `Output will appear here in ${converterPrettyNames[destType] || destType}.`,\n          }}\n          onChange={() => void 8}\n        />\n      );\n      break;\n    case \"error\":\n      comp = <ErrorDisplay result={result} />;\n      break;\n  }\n  return (\n    <div className=\"codebox-wrapper\" style={style}>\n      {comp}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { getSourceBoxFor, SourceInfo } from \"../sources\";\nimport { TransformBox, TransformSourceProps, TransformTypeProps } from \"./TransformBox\";\nimport { DestBox } from \"./DestBox\";\nimport { MainLayout, TransformResult } from \"../types\";\nimport SplitPane from \"react-split-pane\";\n\ninterface MainContentPaneProps extends TransformTypeProps, TransformSourceProps {\n  sources: SourceInfo[];\n  destType: string;\n  result: TransformResult;\n  layout: MainLayout;\n}\n\nexport const MainContentPane: React.FC<MainContentPaneProps> = ({\n  sources,\n  transform,\n  onChangeTransform,\n  onChangeTransformType,\n  transformType,\n  destType,\n  result,\n  layout,\n}) => {\n  const nSources = sources.length;\n  const sourceBoxes = (\n    <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\n      {sources.map((s, i) => getSourceBoxFor(s, nSources > 1 ? `Input ${i + 1}` : undefined, `input-${i}`))}\n    </div>\n  );\n  const transformBox = (\n    <TransformBox\n      transform={transform}\n      transformType={transformType}\n      onChangeTransform={onChangeTransform}\n      onChangeTransformType={onChangeTransformType}\n      nSources={nSources}\n    />\n  );\n  const destBox = <DestBox destType={destType} result={result} />;\n  switch (layout) {\n    case MainLayout.ThreeColumns:\n    default:\n      return (\n        <SplitPane split=\"vertical\" defaultSize=\"35%\">\n          {sourceBoxes}\n          <SplitPane split=\"vertical\" defaultSize=\"40%\">\n            {transformBox}\n            {destBox}\n          </SplitPane>\n        </SplitPane>\n      );\n    case MainLayout.BottomCode:\n      return (\n        <SplitPane split=\"horizontal\" defaultSize=\"80%\">\n          <SplitPane split=\"vertical\" defaultSize=\"50%\">\n            {sourceBoxes}\n            {destBox}\n          </SplitPane>\n          {transformBox}\n        </SplitPane>\n      );\n    case MainLayout.NoCode:\n      return (\n        <SplitPane split=\"vertical\" defaultSize=\"50%\">\n          {sourceBoxes}\n          {destBox}\n        </SplitPane>\n      );\n  }\n};\n","import React from \"react\";\nimport { MainLayout } from \"./types\";\nimport { Toolbar } from \"./components/Toolbar\";\nimport createPersistedState from \"use-persisted-state\";\nimport { SemanticToastContainer } from \"react-semantic-toasts\";\nimport \"react-semantic-toasts/styles/react-semantic-alert.css\";\nimport { useSource, useTransformResult } from \"./sources\";\nimport { MainContentPane } from \"./components/MainContentPane\";\n\nconst useLayoutState = createPersistedState(\"d2d-layout\");\nconst useTransformState = createPersistedState(\"d2d-transform\");\nconst useTransformTypeState = createPersistedState(\"d2d-transform-type\");\n\nconst App: React.FC = () => {\n  const [nSources, setNSources] = React.useState(1);\n  const [destType, setDestType] = React.useState(\"json\");\n  const [transform, setTransform] = useTransformState(\"\");\n  const [transformType, setTransformType] = useTransformTypeState(\"javascript\");\n  const [layout, setLayout] = useLayoutState(MainLayout.ThreeColumns);\n  const source1 = useSource();\n  const source2 = useSource();\n  const source3 = useSource();\n  const sources = [source1, source2, source3].slice(0, nSources);\n  const result = useTransformResult(sources, transform, transformType, destType);\n  return (\n    <>\n      <div id=\"settings\">\n        <Toolbar\n          nSources={nSources}\n          setNSources={setNSources}\n          destType={destType}\n          setDestType={setDestType}\n          layout={layout}\n          setLayout={setLayout}\n        />\n      </div>\n      <div id=\"main-panes\">\n        <MainContentPane\n          sources={sources}\n          transform={transform}\n          transformType={transformType}\n          onChangeTransform={setTransform}\n          onChangeTransformType={setTransformType}\n          destType={destType}\n          result={result}\n          layout={layout}\n        />\n      </div>\n      <SemanticToastContainer position=\"top-right\" />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-table/react-table.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/solarized.css\";\nimport \"codemirror/mode/yaml/yaml\";\nimport \"codemirror/mode/toml/toml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/display/placeholder\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}